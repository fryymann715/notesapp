LESSON: 9
NAME: Program with Objects
TITLE: OOP
DESC: Object-oriented programming, or OOP, is a model of programming that focuses objects and data as opposed to actions and logic. In OOP, programmers create and use what are called 'classes' to in turn create 'objects' that can be manipulated to fit the needs of the programmer. These concepts make programming easier, especially on larger scale projects, because once a class is defined programmers can create countless objects from that class without much coding.
TITLE: Abstraction
DESC: The concept of focusing only the necessary details that pertain to your program its needs is called abstraction. By focusing only on the types of things and the operations available instead of the concrete implementation of things, you can create code that is more simple, more general, and more abstract, thus increasing your code's ability to be reused.
TITLE: Classes
DESC: A class is like a blueprint for objects in OOP. Like how a blueprint has all the attributes of a building within it, a class contains all the information an instance of that class will have. When a class is defined it is defined with any number of variables and/or functions. Once initialized, the computer will create space in memory for an instance of that class with all the information that is defined in the class. Classes are used in many different programming languages, HTML and CSS both use classes to apply identical styling properties in CSS to multiple blocks of code in HTML without having to repeat code all over the place.
TITLE: Objects
DESC: An object, is an instance of a class. So when an object is created, you are actually calling a function in the class file ( __init__()) to create that space in memory for the object. Once created, an object will have all the variables and functions that the class has within it and can perform all the functions defined in the class. So one class can give way to limitless objects without having to rewrite all the code for each one.
TITLE: Inheritance
DESC: When an object is crearted, it gets all the things the class has, this is called inheritance. Much like the concept of inheriting features and quirks from your parents, an object inherits all the attributes of its class. This allows a programmer to write the common denominator code into the class and create multiple objects of that class each with different information stored in their variables without having to rewrite the code for each object, this reduces development time and ensures more accurate code.
TITLE: Libraries and Modules
DESC: A library is a collection of files that are made by programmers and available for other programmers to use in their code. Modules are the files that are within libraries and have functions and classes in them that other programmers may want to use. These modules must be imported at the begining of a Python file if a program within wants to use a function or class in the module, and the library that contains the module must be installed on the system. This allows programmers to easily use code they have previously written, or that someone else has previously written, within new programs. With the use of libraries and the modules they contain, programmers do not have to write every step for what they want their program to do. This is what really makes the concept of abstraction possible.
TITLE: Data Modeling
DESC: With the concept of abstraction and the use of modules, classes, and objects, developers need only identify all the objects they want to manipulate and how they relate to one another. This is called Data Modeling, and this enables developers to easily map out what they want their program to do, what it needs to do it, and how it is going to do it.
